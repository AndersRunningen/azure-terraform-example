name: 'Terraform'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: 'Find version of Terraform to use'
      id: tfversion
      run: echo ::set-output name=version::$(grep required_version provider.tf | sort -u | tail -1 | cut -d= -f2- | xargs)

    - name: 'Terraform Format'
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ steps.tfversion.outputs.version }}
        # tf_actions_subcommand: 'fmt'
        # tf_actions_working_dir: "./terraform"

    # - name: 'Terraform Init'
    #   uses: hashicorp/setup-terraform@v1
    #   with:
    #     terraform_version: 0.15.4
    #     tf_actions_subcommand: 'init'
    #     tf_actions_working_dir: "./terraform"

    # - name: 'Terraform Validate'
    #   uses: hashicorp/setup-terraform@v1
    #   with:
    #     terraform_version: 0.15.4
    #     tf_actions_subcommand: 'validate'
    #     tf_actions_working_dir: "./terraform"

    # - name: 'Terraform Plan'
    #   uses: hashicorp/setup-terraform@v1
    #   with:
    #     tf_actions_version: 0.15.4
    #     tf_actions_subcommand: 'plan'
    #     tf_actions_working_dir: "./terraform"

    # - name: Terraform Apply
    #   if: github.ref == 'refs/heads/main'
    #   uses: hashicorp/setup-terraform@v1
    #   with:
    #     tf_actions_version: 0.15.4
    #     tf_actions_subcommand: 'applya'
    #     tf_actions_working_dir: "./terraform"
